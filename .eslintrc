{
    "env": {
        "browser": true,
        "jest": true
    },
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "react",
        "react-hooks",
        "sonarjs",
        "@typescript-eslint",
        "import",
        "jsx-a11y",
        "testing-library"
    ],
    "extends": [
        "prettier",
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:sonarjs/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:jsx-a11y/recommended"
    ],
    "parserOptions": {
        "project": "tsconfig.json",
        "tsconfigRootDir": "."
    },
    "ignorePatterns": [
        "_server/*",
        "node_modules/*",
        "*.test.tsx",
        "*.stories.tsx"
    ],
    "rules": {
        "indent": ["error", "tab"],
        "quotes": ["error", "single"],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/unbound-method": "off",
        "react/display-name": "off",
        "react/prop-types": "off",
        "jsx-quotes": ["error", "prefer-double"],
        "no-multi-spaces": "error",
        "react/jsx-curly-spacing": [
            2,
            {
                "when": "never"
            }
        ],
        "react/jsx-tag-spacing": [
            2,
            {
                "beforeSelfClosing": "always"
            }
        ],
        "react/no-string-refs": [
            2,
            {
                "noTemplateLiterals": true
            }
        ],
        "react/jsx-wrap-multilines": [
            2,
            {
                "declaration": "parens-new-line",
                "assignment": "parens-new-line",
                "return": "parens-new-line",
                "arrow": "parens-new-line",
                "condition": "parens-new-line",
                "logical": "parens-new-line",
                "prop": "parens-new-line"
            }
        ],
        "react/self-closing-comp": [
            "error",
            {
                "component": true,
                "html": true
            }
        ],
        "react/jsx-closing-bracket-location": [
            2,
            {
                "nonEmpty": "tag-aligned",
                "selfClosing": "tag-aligned"
            }
        ],
        "react/jsx-no-bind": [
            2,
            {
                "ignoreDOMComponents": false,
                "ignoreRefs": true,
                "allowArrowFunctions": true,
                "allowFunctions": true,
                "allowBind": false
            }
        ],
        "object-curly-spacing": ["error", "always"],
        "react/react-in-jsx-scope": "off",
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/restrict-plus-operands": "off",
        "jsx-a11y/anchor-is-valid":[
            "error",
            {
                "components": [ "Link" ],
                "specialLink": [ "hrefLeft", "hrefRight" ],
                "aspects": [ "invalidHref", "preferButton" ]
            }
        ],
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": {
                    "attributes": false
                }
            }
        ],
        "sonarjs/no-duplicate-string": "off",
        "react/no-unknown-property": "warn"
    },
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "node": {
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            },
            "typescript": {
                "alwaysTryTypes": true,
                "project": "tsconfig.json"
            }
        }
    },
    "overrides": [
        // Only uses Testing Library lint rules in example files
        {
            "files": [
                "**/__tests__/**/*.[jt]s?(x)",
                "**/?(*.)+(spec|test).[jt]s?(x)"
            ],
            "extends": ["plugin:testing-library/react"]
        }
    ]
}
