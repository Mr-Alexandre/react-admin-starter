// stylelint-disable declaration-no-important

// Margin and Padding

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .u-#{$abbrev}#{$infix}-#{$size} {
          #{$prop}: $length !important;
        }
        .u-#{$abbrev}t#{$infix}-#{$size},
        .u-#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }
        .u-#{$abbrev}r#{$infix}-#{$size},
        .u-#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }
        .u-#{$abbrev}b#{$infix}-#{$size},
        .u-#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }
        .u-#{$abbrev}l#{$infix}-#{$size},
        .u-#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
        }
      }
    }

    // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
    @each $size, $length in $spacers {
      @if $size != 0 {
        .u-m#{$infix}-n#{$size} {
          margin: -$length !important;
        }
        .u-mt#{$infix}-n#{$size},
        .u-my#{$infix}-n#{$size} {
          margin-top: -$length !important;
        }
        .u-mr#{$infix}-n#{$size},
        .u-mx#{$infix}-n#{$size} {
          margin-right: -$length !important;
        }
        .u-mb#{$infix}-n#{$size},
        .u-my#{$infix}-n#{$size} {
          margin-bottom: -$length !important;
        }
        .u-ml#{$infix}-n#{$size},
        .u-mx#{$infix}-n#{$size} {
          margin-left: -$length !important;
        }
      }
    }

    // Some special margin utils
    .u-m#{$infix}-auto {
      margin: auto !important;
    }
    .u-mt#{$infix}-auto,
    .u-my#{$infix}-auto {
      margin-top: auto !important;
    }
    .u-mr#{$infix}-auto,
    .u-mx#{$infix}-auto {
      margin-right: auto !important;
    }
    .u-mb#{$infix}-auto,
    .u-my#{$infix}-auto {
      margin-bottom: auto !important;
    }
    .u-ml#{$infix}-auto,
    .u-mx#{$infix}-auto {
      margin-left: auto !important;
    }
  }
}


@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infixReverse: breakpoint-infix-reverse($breakpoint, $grid-breakpoints);

    @each $size, $length in $spacers {
      .u-space-items_#{$infixReverse}#{$size} {
        margin-top: -$length;
        margin-bottom: -$length;

        & > :nth-child(n + 1) {
          margin-top: $length;
          margin-bottom: $length;
        }

        &.u-space-items_with-outer {
          margin-top: $length;
          margin-bottom: $length;
        }
      }
    }
  }
}

.u-space-items {
  & > :not(:last-child) {
  }
}

.u-space-items_with-outer {

}

.u-space-items_remove-collapse {
  display: inline-block;
  width: 100%;
}

.u-space-items_remove-outer {
  margin-top: 0;
  margin-bottom: 0;

  & > :first-child {
    margin-top: 0;
  }

  & > :last-child {
    margin-bottom: 0;
  }
}
